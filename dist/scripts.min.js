let pokemonRepository = (function () {
  let e = [],
    t = document.querySelector(".pokemon-list"),
    n = document.querySelector(".search"),
    o = document.querySelector(".modal-dialog");
  function i(e) {
    let t = document.createElement("div");
    t.classList.add("text-center");
    let n = document.createElement("div");
    n.classList.add("spinner-border"), n.setAttribute("role", "status");
    let o = document.createElement("span");
    o.classList.add("sr-only"),
      (o.innerText = "Finding Pokemon..."),
      n.appendChild(o),
      t.appendChild(n),
      e.appendChild(t);
  }
  function r(e) {
    e.removeChild(e.lastChild);
  }
  function a(t) {
    "object" == typeof t && Object.keys(t).includes("detailsUrl")
      ? e.push(t)
      : console.error("Add pokemon using correct format: {name:, detailsUrl:}");
  }
  function l() {
    t.innerHTML = "";
  }
  function s() {
    o.classList.add("hidden");
  }
  function c(e) {
    let n = document.createElement("p");
    n.classList.add("error-message"),
      n.classList.add("col-6"),
      (n.innerText = e),
      t.appendChild(n);
  }
  function d() {
    return e;
  }
  function u(e) {
    m(e).then(function () {
      document.createElement("li").classList.add("col");
      let t = document.createElement("button"),
        n = document.createElement("h2");
      t.appendChild(n),
        (n.innerText = e.name.charAt(0).toUpperCase() + e.name.slice(1)),
        t.classList.add("pokemon-button"),
        t.setAttribute("data-toggle", "modal"),
        t.setAttribute("data-target", ".modal");
      let o = document.createElement("img");
      (o.src = e.frontImageUrl),
        t.appendChild(o),
        t.addEventListener("click", function () {
          h(e);
        });
    });
  }
  function p(t) {
    return e.filter(function (e) {
      let n = e.name.toLowerCase(),
        o = t.toLowerCase();
      return n.startsWith(o);
    });
  }
  function m(e) {
    let t = document.querySelector(".modal-body");
    return (
      i(t),
      fetch(e.detailsUrl)
        .then(function (e) {
          return e.json();
        })
        .then(function (n) {
          r(t),
            (e.frontImageUrl = n.sprites.front_default),
            (e.height = n.height);
          let o = [];
          n.types.forEach(function (e) {
            o.push(e.type.name);
          }),
            (e.types = o.join(", "));
          let i = [];
          n.abilities.forEach(function (e) {
            i.push(e.ability.name);
          }),
            (e.abilities = i.join(", "));
        })
        .catch(function (e) {
          console.error(e);
        })
    );
  }
  function h(e) {
    m(e).then(function () {
      let t = document.querySelector(".modal-title"),
        n = document.querySelector(".modal-body");
      (t.innerHTML = ""), (n.innerHTML = "");
      document.querySelector(".modal-title").innerText =
        e.name.charAt(0).toUpperCase() + e.name.slice(1);
      let o = document.createElement("img");
      o.classList.add("modal-img"), (o.src = e.frontImageUrl);
      let i = document.createElement("div");
      i.classList.add("modal-text");
      let r = document.createElement("p");
      r.innerText = "Height: " + e.height / 10 + "m";
      let a = document.createElement("p");
      a.innerText = "Types: " + e.types;
      let l = document.createElement("p");
      (l.innerText = "Abilities: " + e.abilities),
        n.append(o),
        n.append(i),
        n.append(r),
        n.append(a),
        n.append(l);
    });
  }
  return (
    n.addEventListener("input", function () {
      let e = p(n.value);
      l(),
        0 === e.length ? c("No pokemon match your criteria. ") : e.forEach(u);
    }),
    window.addEventListener("keydown", function (e) {
      "Escape" === e.key && s();
    }),
    {
      showLoadingSpinner: i,
      hideLoadingSpinner: r,
      add: a,
      removeList: l,
      hideModal: s,
      showErrorMessage: c,
      loadList: function e() {
        let t = document.querySelector(".main");
        return (
          i(t),
          fetch("https://pokeapi.co/api/v2/pokemon/?limit=150")
            .then(function (e) {
              return e.json();
            })
            .then(function (e) {
              r(t),
                (pokemonArray = e.results).forEach(function (e) {
                  a({ name: e.name, detailsUrl: e.url });
                });
            })
            .catch(function (e) {
              r(t),
                l(),
                s(),
                c(
                  "The Pokemon are not around right now. Please try again later."
                ),
                console.error(e);
            })
        );
      },
      getAll: d,
      addListPokemon: u,
      filterPokemon: p,
      loadDetails: m,
      showDetails: h,
    }
  );
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach(function e(t) {
    pokemonRepository.addListPokemon(t);
  });
});
